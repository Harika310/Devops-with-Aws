LINUX: Free and Open-source OS
OS: Operating system -- > communication blw user & system.

TYPES OF OS:
1. WINDOWS
2. LINUX
3. MAC OS

LINUX COMPONENTS:

1. KERNEL: Manages hardware components (CPU, MEMORY, etc --)
           The lowest level of OS.

2. DAEMON: Manage the Background Service (Lights, Sounds, schedule)
           While starting the system.

3. SHELL: Manage the User Inputs (Command, Script, programs)
          Takes input from the user and executes and gives the output.
           

OPEN SOURCE:
It is free no need to pay money.
It is available publically.
We can change the code.
we can give a copy of the code to other people.

ADVANTAGES:
It's free and open-source.
Multi-user based.
Better Performance.
It can be used for all programming languages.

Client & COMMANDS

MOBAXTERM (or)
Gitbash
putty
superputty

1. Create AWS account
2. Install gitbash and notepad++
3. create keypairs
4. Import public key into AWS
5. Create security group
6. launch instance
7. connect to instance from gitbash/putty/superputty/mobaxterm


COMMANDS:
ec2-user: default user      
 
/home/<user-name> : Landing Directory
uname       : to show the kernel name
uname -a    : to show the system information
du -h       : to show the disk space in human readable form
/           : Root directory
pwd		: to show the present working directory
cd          : change directory 
cd ..       : up/one step back


ls		: to list the files
ls -l       : to list the files in lenghty format
ls -a	      : to list the hidden files
ls -la      : to list all hidden files & directories
ls -lr      : to list the files in reverse order
ls -lt      : to list the files in latest date/time
ls -ltr     : to list the files in latest date/time in reverse order
ls --help   : to list the files information
clear/ctrl + l	: to clear the screen

CRUD(Create, Read, Update, Delete)

touch file1	: to create a file    ----------->create
cat>file1	: to insert the content
cat file1	: to show the content in a file    ---------------> Read 
enter, ctrl + d	: to save the content
cat>>file1	: Append/to insert the content more than one time/adding more content to the file. ---------->update


cp file1 file2	: to copy the content from file1 to file2
mv file1 file5	: to rename file1 to file3
rm file2	: to remove file2                 -------------> delete
rm file4 -f	: to remove file4 forcefully
rm * -f		: to remove all files forcefully

touch java{1..5}: to create series of files
rm j* -f	: to remove all the files starting with j
wc -l file1	: to see number of lines, words & characters.

head file2	: to print top 10 lines
head -7 file1	: to print top 7 lines
head -5 file1	: to print top 5 lines

tail file1	: to print bottom 10 lines
tail -7 file1	: to print bottom 7 lines
tail -5 file1	: to print bottom 5 lines
cat file1 | Head -n 10 | tail -n 5  : to print lines between 5 to 10 
grep <word to find> <which file>     : to search the perticular word in file
wget <file-url>     : to download the application/file
apt get  : install & update the packages
curl <file -url>  : to get the text directly on to the terminal  

 DIRECTORIES

mdkir file1/dir1	: to create a folder
cd dir1		: to go inside the directory
cd ..		      : to go back one directory
rm -r file1       : to remove directory and its content
rmdir file1/dir1	: to remove empty directory
cut   : divide the space in b/w words called delimiter
                  used to get the fragments of a text
echo <file-url> | cut -d / -f1  : to display the words
awk   : used to divide the text in column format
echo <url> | awk -F "/" '{print $ 1F}  : to print the words
echo <url> | awk -F ":" '{print $ 1F} passwd   : to show the all users 





===============================================================

VI/VIM EDITOR: Used to edit files and insert content.
i: used to modify/insert content
esc: to get out from insert mode

 SAVE MODE:

:w	: to save 
:q	: to quit 
:wq	: to save & quit
!	: forcefully

INSERT MODE:

A	: End of line
I	: Starting of line
O	: Create new line above existing line
o	: Create new line below existing line

 COMMAND MODE:

yy	: copies single line
p	: paste single line
dd	: delete single line
u	: undo

nyy	: copies n lines
np	: pastes n line
dd    : delete single line
ndd	: delete n lines
nu	: undo n times
:%d     : delete everything
:1d --> delete 1st line

gg	: top of file
shift+g	: bottom of file
:15	: to go to line 15
:set nu: print lines inside the file
:set nonu : remove numbers 
:/ <word to find>  : to search the word from top
:? <word to find>  : to search the word from bottom

:noh        : to remove the highlights
:s/word-to-find/word-to-replace  : to replace the word with another name where cursor appears
:%s/word-to-find/word-to-replace/g : to replace every line , but only first occurance
:s/word-to-find/word-to-replace/g  : all occurances in the file (global)



===========================================================================

HARDWARE:

cat /proc/meminfo	: to show memory information
lsmem			: to show memory information
cat /proc/cpuinfo	: to show cpu information
lscpu			: to show cpu information
cat /etc/os-release	: to print flavoure


fdisk -l		: to show the ebs volume info
lsblk			: to show the ebs volume info

df			: to show the mount point
df -m			: to show the mount point in mb
du -h       : to show the disk space in human readable form

free			: to show how much ram is available
free -m			: to show how much ram is available

yum install lshw -y	: to install the package 
lshw			: to show the hardware information.
================================================================

FILE PERMISSIONS:

rw-r--r--
r	: read		: 4
w	: write		: 2
x	: executable	: 1

user	: rw-	: 4+2+0	: 6
group	: r--	: 4+0+0	: 4
others	: r--	: 4+0+0	: 4


chmod 777 file1
chmod 666 file2

chown ramesh file1: to make ramesh  as owner to file1
chgrp ramesh  file1: to make ramesh  as group to file1
chown ramesh ramesh  file2 : to make ramesh user&group for file2
chown ramesh :raham file1: ramesh  as user & raham as group
=========================================

Linux Administration: 

USER MANAGEMENT: 

ec2-user: he is the default user.

root: he is the admin, he will have all permissions.
sudo su --> super user access


useradd <user-name>    : to create a user
user -- > GROUP & FOLDER 
id <user-name>        : to show the user info
passwd <user-name>    : to assign password for user

cat /etc/passwd       : to see the users list.
cat /etc/group        : to see the groups list.
ls /home              : to show user folder on home

NOTE: in linux password will not be visible.
password -- > more than 8 char. 
username should not be given as password.

EXAMPLE:

useradd ramesh   : create the user 
id ramesh        :displays ramesh information

passwd ramesh    : setup the password for ramesh

create devops group and add ramesh to devops group

groupadd devops   :every user have atleast one primary group and multiple secondary groups

usermod -g devops ramesh   : adding ramesh to devops group

ramesh primary --> devops
ramesh secondary --> testing

usermod -aG testing ramesh   : adding ramesh to testing group as secondary

gpasswd -d ramesh testing     : delete ramesh from testing
userdel ramesh : to delete ramesh user

if employee leaves the organisation
-------------------------------------
1. remove him from the group
2. then delete the user

a user must have atleast one primary and one secondary group

usermod -g ramesh ramesh
userdel ramesh --> ramesh user and ramesh group both will be deleted


====================================

PACKAGE MANAGEMENT:

A software have lot of dependencies on other softwares

Previous we can use rpm --> redhat package manager

identify the dependencies, install the dependencies and finally install the package you want

current --yum --> dnf

/etc/yum.repos.d/   ----> repo of url's

dnf install git -y---install the application  (-y---->doesn't interrupt)

dnf list installed  ------->list of packages in system
dnf update-------> update package


how can check cpuinfo, memory info, OS
/etc/os-release ----------->toshow the info of os release
/proc/cpuinfo ------------> to show the RAM information
/proc/meminfo -------------> to show the memory information

---------------------------------
SERVICE MANAGEMENT:

ssh port no ---22
mysql  -3306
http ---80
https--- 443

systemctl start <package-name> ------> start the service
systemctl status <package-name>----------->  check the status 
systemctl stop <package-name>---------->  stop the service
systemctl restart <package-name> --------> restart the service
systemctl enable <package-name>--------> enable the service
systemctl disable<package-name>--------> disable the service 

--------------------------------------------

PROCESS MANAGEMENT:

a sequence of steps to be executed to complete a task...
every process should have an ID for tracking purpose.

pid -->process instance id
ps ------> to check process
ps -ef ------- to check the all processes
ex:
ps -ef | grep nginx

types of process:

1.foreground --> BLOCKS the screen, runs in foreground
   sleep 20
2.background --> runs in background, you can do other works
sleep 20&

kill --> request to end (graceful termination)
kill -9 --> order to end (forceful)

-----------------------------------


NETWORKING MANAGEMENT:

ip addr
ip addr show
hostname -i
ifconfig          -- > all the 4 commands used to show ip address

ping google.com -- > to get response form server
ping -c 4 google.com

netstat   --- > to show active internet connections/open ports
netstat -l -> to show all ports
netstat -lt -------> to show the tcp ports
netstat -lnt----- to show the tcp connection with port no
netstat -lntp --to show the open ports and their process id's




ps aux -- > to list process in ids

----------------------
SED: Stream Editor -- > to replace words in a file.

%s/is/abc/ -- > to replace is with abc
sed '3c/abc/' file1  -- > to replce 3rd line in a file
sed 's/linux/unix/' file1-- > single word replace
sed 's/linux/unix/; s/session/class/' file1 -- > multi word replace
cat file1 -n -- > to print line numbers in a file
sed '=' file1 -- > to print line numbers in a file
sed -n '5,13p' file1 -- > to print line 5 to 13
sed -e '5,13p' file1 -- > to print line 5 to 13 double times

===========================================================================

LINUX FOLDER STRUCTURE/ DIRECTORY SYSTEM: 


bin	: it stores all the binary files and also it stores the commands that had been executed by the user.
sbin	: it stores the commands that had been executed by the super user.
boot	: it contains boot images & boot files.
dev	: it contains all the device files
etc	: it contains all the host specific system configuration files.
lib	: it contains all the library files of the system.
lib64	: it contains all the library files of the system of 64 bit.
mnt	: it is used for the mounting purpose.
opt	: it stores all the file details of the 3 rd party when it installed.
proc	: it is used to see all the processing related files (Hardware details).
srv	: it stores all the service related information provided by system.
sys	: it stores any new changes that obtained while changing Hardware.
tmp	: it stores temperory files and have access to all.
usr	: it contains local system files which are continuing with the old system architecture.
var	: it stores all the system services.
